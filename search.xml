<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo的应用</title>
      <link href="/2023/02/08/hexo-de-ying-yong/"/>
      <url>/2023/02/08/hexo-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<p>13.1 打开本地博客</p><h3 id="3-2插件方式-插入图片"><a href="#3-2插件方式-插入图片" class="headerlink" title="3.2插件方式-插入图片"></a>3.2插件方式-插入图片</h3><p>ps:个人觉得这是最方便的</p><p>用 npm install hexo-renderer-marked下载图片插件</p><p>或者用 npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>安装之后在<code>config.yaml</code>中更改配置如下：</p><p><img src="/2023/02/08/hexo-de-ying-yong/1.png"></p><p>在本地博客目录下的source/_posts里会多出一个跟文章名一样的文件夹</p><p>把文章里需要用到的图片放进里面</p><p>文章图片引用直接 <code>![](图片名.图片格式)</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用github访问hexo博客</title>
      <link href="/2023/02/03/yong-github-fang-wen-hexo-bo-ke/"/>
      <url>/2023/02/03/yong-github-fang-wen-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="1-绑定用户"><a href="#1-绑定用户" class="headerlink" title="1.绑定用户"></a>1.绑定用户</h2><h3 id="1-1生成信息"><a href="#1-1生成信息" class="headerlink" title="1.1生成信息"></a>1.1生成信息</h3><p>cmd或者git输入 </p><p>git config –global user.name “name”</p><p>git config –global user.email”email”</p><h3 id="1-2生成ssh-key"><a href="#1-2生成ssh-key" class="headerlink" title="1.2生成ssh key"></a>1.2生成ssh key</h3><p>cmd或者git输入 </p><p>ssh-keygen -t rsa -C “email” </p><p>一直回车键，生成后，在C盘找到id_rsa.pub文件打开，复制粘贴到github ssh上</p><h2 id="2-建立本地仓库"><a href="#2-建立本地仓库" class="headerlink" title="2.建立本地仓库"></a>2.建立本地仓库</h2><p>找到你本地博客的根目录</p><p>cmd或者git输入  git init 会生成一个隐藏文件夹.git</p><p>接着，将所有文件添加到仓库中</p><p>执行指令：<code>git add .</code> (注意空格后有.)</p><p>然后，把文件提交到仓库，双引号内是提交注释。</p><p>执行指令：<code>git commit -m "提交文件"</code></p><h2 id="3-关联github仓库"><a href="#3-关联github仓库" class="headerlink" title="3.关联github仓库"></a>3.关联github仓库</h2><p>复制github仓库ssh地址（建立的仓库名一定要是 用户名.github.io）</p><p>执行指令：git remote add origin <a href="mailto:git@github.com">git@github.com</a>:用户名/用户名.github.io.git</p><h2 id="4-上传本地仓库"><a href="#4-上传本地仓库" class="headerlink" title="4.上传本地仓库"></a>4.上传本地仓库</h2><p>打开博客所在文件夹中的_config.yml</p><p><img src="/2023/02/03/yong-github-fang-wen-hexo-bo-ke/github1.png"></p><p>输入下面三个指令：hexo cl,hexo g,hexo d</p><p>ps:hexo d部署到github仓库，如果出现问题，删掉博客根目录下的.deploy_git文件夹，再重复那三个指令即可</p><h2 id="5-通过github访问博客"><a href="#5-通过github访问博客" class="headerlink" title="5.通过github访问博客"></a>5.通过github访问博客</h2><p>输入网址：github用户名.github.io即可访问到上传到github仓库中的博客</p><p>ps:github用户名.github.io这个也是你放博客的仓库名</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建本地博客</title>
      <link href="/2023/02/03/hexo-da-jian-ben-di-bo-ke/"/>
      <url>/2023/02/03/hexo-da-jian-ben-di-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="1-准备阶段"><a href="#1-准备阶段" class="headerlink" title="1.准备阶段"></a>1.准备阶段</h2><h3 id="1-1安装git"><a href="#1-1安装git" class="headerlink" title="1.1安装git"></a>1.1安装git</h3><p>windows </p><p>32位链接：<a href="https://pan.baidu.com/s/15ksAYNVYyCKBAHH4VuvR4g?pwd=a425">https://pan.baidu.com/s/15ksAYNVYyCKBAHH4VuvR4g?pwd=a425</a><br>提取码：a425</p><p>64位链接：<a href="https://pan.baidu.com/s/1xtjDVoZ_qGv3PY8quDugFA?pwd=3rtd">https://pan.baidu.com/s/1xtjDVoZ_qGv3PY8quDugFA?pwd=3rtd</a><br>提取码：3rtd</p><p>或者直接去官网下,需科学上网条件<a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a></p><p>安装过程一直next就行</p><h3 id="1-2安装nodejs及其配置环境"><a href="#1-2安装nodejs及其配置环境" class="headerlink" title="1.2安装nodejs及其配置环境"></a>1.2安装nodejs及其配置环境</h3><h4 id="1-2-1安装"><a href="#1-2-1安装" class="headerlink" title="1.2.1安装"></a>1.2.1安装</h4><p>64位链接：<a href="https://pan.baidu.com/s/1sJ54VKd5TtwNb6YX2WIpSQ?pwd=i7t2">https://pan.baidu.com/s/1sJ54VKd5TtwNb6YX2WIpSQ?pwd=i7t2</a><br>提取码：i7t2</p><p>下载下来解压即可</p><p>打开git或者cmd,检查安装是否成功</p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node1.png"></p><h4 id="1-2-2配置环境"><a href="#1-2-2配置环境" class="headerlink" title="1.2.2配置环境"></a>1.2.2配置环境</h4><p>配置前准备</p><p>在解压缩的文件夹中新建这两个文件夹，我这边是放D盘了，且名字改为了nodejs,以下截图都是这个路径为参考</p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node2.png"></p><p>再次打开cmd 输入</p><p>npm config set prefix “D:\nodejs\node_global”</p><p>npm config set prefix “D:\nodejs\node_cache”//路径填写自己的</p><p><strong>设置环境变量</strong></p><p>打开设置搜索环境变量</p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node3.png"></p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node4.png"></p><p><strong>编辑用户变量</strong></p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node5.png"></p><p>找到尾号为npm的配置，点击编辑，替换成解压缩文件夹中的npm路径</p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node6.png"></p><p><strong>编辑系统变量</strong></p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node7.png"></p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node8.png"></p><p>新建%NODE_PATH%</p><p><img src="/2023/02/03/hexo-da-jian-ben-di-bo-ke/node9.png"></p><p><strong>最后输入npm install express -g</strong></p><h2 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h2><p>//如果遇到问题，报错443的话，删除C盘与.ssh文件夹同目录下的.npmrc文件</p><p>ps:一定要有权限，要是实在不会用cmd管理员身份打开 cd 到指定的文件夹开始后面流程即可</p><p>1.使用npm安装Hexo，在cmd命令行中输入npm install -g hexo-cli</p><p>2.自己可以指定一个文件夹，然后右键点击打开git 输入hexo init</p><p>3.完毕后再次输入npm install</p><h2 id="3-hexo的开启"><a href="#3-hexo的开启" class="headerlink" title="3.hexo的开启"></a>3.hexo的开启</h2><p>执行指令：hexo s即可</p><p>ps:每次改动后，打开前执行指令:hexo cl,hexo g,最后再执行hexo s</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2023/02/01/di-yi-pian-bo-ke/"/>
      <url>/2023/02/01/di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>ps:心血来潮就踏上了博客之旅</p><p>github名字:darkchirps（ 暗黑啾啾）</p><p>名字由来：本博客主题用的是matery，开发者是blinkfox(闪电之狐)</p><p>啾啾是一只狗狗的名字，至于暗黑嘛，突兀想到的，本来想用暗玉的(darkjade)被人用了</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
